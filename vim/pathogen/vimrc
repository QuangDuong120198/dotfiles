execute pathogen#infect()

syntax on
filetype plugin indent on

set encoding=UTF-8
set number
set cursorline
set smartcase
set autoread

set tabstop=2
set shiftwidth=2
set expandtab
set smarttab
set smartindent
set autoindent
set wrap

set splitbelow
set splitright

set showcmd
set showmatch

set magic
set incsearch
set hlsearch

set guifont=Ubuntu_Mono_Nerd_Font_Complete:h12

colorscheme onedark

" coc.nvim
let g:coc_start_at_startup = v:false
let g:coc_node_path = ''
let g:coc_disable_startup_warning = 1

" editorconfig-vim
let g:EditorConfig_exclude_patterns = ['fugitive://.*', 'scp://.*']
let g:loaded_EditorConfig = 1

" nerdtree
let g:NERDTreeWinSize = 24
let g:NERDTreeGitStatusEnable = 1

" tmux navigator
let g:tmux_navigator_save_on_switch = 2

" nerdcommenter
let g:NERDSpaceDelims = 1

" airline, airline-theme
let g:airline_theme = 'onedark'
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#formatter = 'default'
let g:airline_powerline_fonts = 1

" latex
let g:tex_flavor = 'latex'

autocmd FileType cs,java,python,tex,makefile,xml setlocal shiftwidth=4 tabstop=4
autocmd FileType makefile setlocal expandtab=0
autocmd BufNewFile,BufRead *.latexmkrc,latexmkrc set filetype=perl
autocmd BufNewFile,BufRead *.cls set filetype=tex
autocmd BufNewFile,BufRead *.sty set filetype=tex

map <F3> :let @/ = ""<CR>

" keymap for coc.nvim
" inoremap <silent><expr> <c-space> coc#refresh()
" nnoremap <silent><space>d :<c-u>cocdisable<cr>
" nnoremap <silent><space>a :<c-u>coclist diagnostics<cr>
" nnoremap <silent><space>e :<c-u>coclist extensions<cr>
" nnoremap <silent><space>c :<c-u>coclist commands<cr>
" nnoremap <silent><space>o :<c-u>coclist outline<cr>
" nnoremap <silent><space>s :<c-u>coclist -i symbols<cr>
" nnoremap <silent><space>p :<c-u>coclistresume<cr>
" nnoremap <silent> gd <plug>(coc-definition)

" keymap for nerdtree and nerdtree tab
nnoremap <silent>ntf  :<C-u>NERDTreeFocus<CR>
nnoremap <silent>ntto :<C-u>NERDTreeTabsOpen<CR>
nnoremap <silent>nttc :<C-u>NERDTreeTabsClose<CR>
nnoremap <silent>nttt :<C-u>NERDTreeTabsToggle<CR>

highlight Normal guibg=NONE ctermbg=NONE

" vim-lsp
let g:asyncomplete_auto_popup = 1
let g:asyncomplete_auto_completeopt = 1

set completeopt=menuone,noinsert,noselect,preview

if executable('ccls')
   au User lsp_setup call lsp#register_server({
      \ 'name': 'ccls',
      \ 'cmd': {server_info->['ccls']},
      \ 'root_uri': {server_info->lsp#utils#path_to_uri(lsp#utils#find_nearest_parent_file_directory(lsp#utils#get_buffer_path(), 'compile_commands.json'))},
      \ 'initialization_options': {},
      \ 'whitelist': ['c', 'cpp', 'objc', 'objcpp', 'cc'],
      \ })
endif

inoremap <expr> <Tab>   pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
inoremap <expr> <cr>    pumvisible() ? asyncomplete#close_popup() : "\<cr>"
